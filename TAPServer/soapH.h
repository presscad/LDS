/* soapH.h
   Generated by gSOAP 2.8.19 from d:\CimsForTa\TmsServer\TmsServer.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedByte(soap, data),0) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data),0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_bool(soap, data),0) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns1__DeleteObjectResponse
#define SOAP_TYPE__ns1__DeleteObjectResponse (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DeleteObjectResponse(struct soap*, const char*, int, const _ns1__DeleteObjectResponse *, const char*);
SOAP_FMAC3 _ns1__DeleteObjectResponse * SOAP_FMAC4 soap_in__ns1__DeleteObjectResponse(struct soap*, const char*, _ns1__DeleteObjectResponse *, const char*);

#ifndef soap_write__ns1__DeleteObjectResponse
#define soap_write__ns1__DeleteObjectResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:DeleteObjectResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__DeleteObjectResponse * SOAP_FMAC4 soap_get__ns1__DeleteObjectResponse(struct soap*, _ns1__DeleteObjectResponse *, const char*, const char*);

#ifndef soap_read__ns1__DeleteObjectResponse
#define soap_read__ns1__DeleteObjectResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__DeleteObjectResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__DeleteObjectResponse * SOAP_FMAC2 soap_instantiate__ns1__DeleteObjectResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DeleteObjectResponse * soap_new__ns1__DeleteObjectResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__DeleteObjectResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__DeleteObjectResponse * soap_new_req__ns1__DeleteObjectResponse(struct soap *soap, bool DeleteObjectResult) { _ns1__DeleteObjectResponse *_p = soap_instantiate__ns1__DeleteObjectResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DeleteObjectResponse::DeleteObjectResult = DeleteObjectResult; } return _p; }

inline _ns1__DeleteObjectResponse * soap_new_set__ns1__DeleteObjectResponse(struct soap *soap, bool DeleteObjectResult) { _ns1__DeleteObjectResponse *_p = soap_instantiate__ns1__DeleteObjectResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DeleteObjectResponse::DeleteObjectResult = DeleteObjectResult; } return _p; }

inline void soap_delete__ns1__DeleteObjectResponse(struct soap *soap, _ns1__DeleteObjectResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__DeleteObjectResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__DeleteObject
#define SOAP_TYPE__ns1__DeleteObject (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DeleteObject(struct soap*, const char*, int, const _ns1__DeleteObject *, const char*);
SOAP_FMAC3 _ns1__DeleteObject * SOAP_FMAC4 soap_in__ns1__DeleteObject(struct soap*, const char*, _ns1__DeleteObject *, const char*);

#ifndef soap_write__ns1__DeleteObject
#define soap_write__ns1__DeleteObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:DeleteObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__DeleteObject * SOAP_FMAC4 soap_get__ns1__DeleteObject(struct soap*, _ns1__DeleteObject *, const char*, const char*);

#ifndef soap_read__ns1__DeleteObject
#define soap_read__ns1__DeleteObject(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__DeleteObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__DeleteObject * SOAP_FMAC2 soap_instantiate__ns1__DeleteObject(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DeleteObject * soap_new__ns1__DeleteObject(struct soap *soap, int n = -1) { return soap_instantiate__ns1__DeleteObject(soap, n, NULL, NULL, NULL); }

inline _ns1__DeleteObject * soap_new_req__ns1__DeleteObject(struct soap *soap, int sessionId, int objId) { _ns1__DeleteObject *_p = soap_instantiate__ns1__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DeleteObject::sessionId = sessionId; _p->_ns1__DeleteObject::objId = objId; } return _p; }

inline _ns1__DeleteObject * soap_new_set__ns1__DeleteObject(struct soap *soap, int sessionId, char *clsName, int objId) { _ns1__DeleteObject *_p = soap_instantiate__ns1__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DeleteObject::sessionId = sessionId; _p->_ns1__DeleteObject::clsName = clsName; _p->_ns1__DeleteObject::objId = objId; } return _p; }

inline void soap_delete__ns1__DeleteObject(struct soap *soap, _ns1__DeleteObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__DeleteObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SaveOrUpdateObjectsResponse
#define SOAP_TYPE__ns1__SaveOrUpdateObjectsResponse (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveOrUpdateObjectsResponse(struct soap*, const char*, int, const _ns1__SaveOrUpdateObjectsResponse *, const char*);
SOAP_FMAC3 _ns1__SaveOrUpdateObjectsResponse * SOAP_FMAC4 soap_in__ns1__SaveOrUpdateObjectsResponse(struct soap*, const char*, _ns1__SaveOrUpdateObjectsResponse *, const char*);

#ifndef soap_write__ns1__SaveOrUpdateObjectsResponse
#define soap_write__ns1__SaveOrUpdateObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SaveOrUpdateObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SaveOrUpdateObjectsResponse * SOAP_FMAC4 soap_get__ns1__SaveOrUpdateObjectsResponse(struct soap*, _ns1__SaveOrUpdateObjectsResponse *, const char*, const char*);

#ifndef soap_read__ns1__SaveOrUpdateObjectsResponse
#define soap_read__ns1__SaveOrUpdateObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SaveOrUpdateObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SaveOrUpdateObjectsResponse * SOAP_FMAC2 soap_instantiate__ns1__SaveOrUpdateObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveOrUpdateObjectsResponse * soap_new__ns1__SaveOrUpdateObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SaveOrUpdateObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__SaveOrUpdateObjectsResponse * soap_new_req__ns1__SaveOrUpdateObjectsResponse(struct soap *soap) { _ns1__SaveOrUpdateObjectsResponse *_p = soap_instantiate__ns1__SaveOrUpdateObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SaveOrUpdateObjectsResponse * soap_new_set__ns1__SaveOrUpdateObjectsResponse(struct soap *soap, char *SaveOrUpdateObjectsResult) { _ns1__SaveOrUpdateObjectsResponse *_p = soap_instantiate__ns1__SaveOrUpdateObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SaveOrUpdateObjectsResponse::SaveOrUpdateObjectsResult = SaveOrUpdateObjectsResult; } return _p; }

inline void soap_delete__ns1__SaveOrUpdateObjectsResponse(struct soap *soap, _ns1__SaveOrUpdateObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SaveOrUpdateObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SaveOrUpdateObjects
#define SOAP_TYPE__ns1__SaveOrUpdateObjects (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveOrUpdateObjects(struct soap*, const char*, int, const _ns1__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 _ns1__SaveOrUpdateObjects * SOAP_FMAC4 soap_in__ns1__SaveOrUpdateObjects(struct soap*, const char*, _ns1__SaveOrUpdateObjects *, const char*);

#ifndef soap_write__ns1__SaveOrUpdateObjects
#define soap_write__ns1__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SaveOrUpdateObjects * SOAP_FMAC4 soap_get__ns1__SaveOrUpdateObjects(struct soap*, _ns1__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read__ns1__SaveOrUpdateObjects
#define soap_read__ns1__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate__ns1__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveOrUpdateObjects * soap_new__ns1__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline _ns1__SaveOrUpdateObjects * soap_new_req__ns1__SaveOrUpdateObjects(struct soap *soap, int sessionId) { _ns1__SaveOrUpdateObjects *_p = soap_instantiate__ns1__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SaveOrUpdateObjects::sessionId = sessionId; } return _p; }

inline _ns1__SaveOrUpdateObjects * soap_new_set__ns1__SaveOrUpdateObjects(struct soap *soap, int sessionId, char *clsName, char *xmlformat, xsd__base64Binary *byteArr) { _ns1__SaveOrUpdateObjects *_p = soap_instantiate__ns1__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SaveOrUpdateObjects::sessionId = sessionId; _p->_ns1__SaveOrUpdateObjects::clsName = clsName; _p->_ns1__SaveOrUpdateObjects::xmlformat = xmlformat; _p->_ns1__SaveOrUpdateObjects::byteArr = byteArr; } return _p; }

inline void soap_delete__ns1__SaveOrUpdateObjects(struct soap *soap, _ns1__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__DownloadFileByIdResponse
#define SOAP_TYPE__ns1__DownloadFileByIdResponse (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownloadFileByIdResponse(struct soap*, const char*, int, const _ns1__DownloadFileByIdResponse *, const char*);
SOAP_FMAC3 _ns1__DownloadFileByIdResponse * SOAP_FMAC4 soap_in__ns1__DownloadFileByIdResponse(struct soap*, const char*, _ns1__DownloadFileByIdResponse *, const char*);

#ifndef soap_write__ns1__DownloadFileByIdResponse
#define soap_write__ns1__DownloadFileByIdResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:DownloadFileByIdResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__DownloadFileByIdResponse * SOAP_FMAC4 soap_get__ns1__DownloadFileByIdResponse(struct soap*, _ns1__DownloadFileByIdResponse *, const char*, const char*);

#ifndef soap_read__ns1__DownloadFileByIdResponse
#define soap_read__ns1__DownloadFileByIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__DownloadFileByIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__DownloadFileByIdResponse * SOAP_FMAC2 soap_instantiate__ns1__DownloadFileByIdResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownloadFileByIdResponse * soap_new__ns1__DownloadFileByIdResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__DownloadFileByIdResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__DownloadFileByIdResponse * soap_new_req__ns1__DownloadFileByIdResponse(struct soap *soap) { _ns1__DownloadFileByIdResponse *_p = soap_instantiate__ns1__DownloadFileByIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__DownloadFileByIdResponse * soap_new_set__ns1__DownloadFileByIdResponse(struct soap *soap, xsd__base64Binary *DownloadFileByIdResult) { _ns1__DownloadFileByIdResponse *_p = soap_instantiate__ns1__DownloadFileByIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DownloadFileByIdResponse::DownloadFileByIdResult = DownloadFileByIdResult; } return _p; }

inline void soap_delete__ns1__DownloadFileByIdResponse(struct soap *soap, _ns1__DownloadFileByIdResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__DownloadFileByIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__DownloadFileById
#define SOAP_TYPE__ns1__DownloadFileById (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownloadFileById(struct soap*, const char*, int, const _ns1__DownloadFileById *, const char*);
SOAP_FMAC3 _ns1__DownloadFileById * SOAP_FMAC4 soap_in__ns1__DownloadFileById(struct soap*, const char*, _ns1__DownloadFileById *, const char*);

#ifndef soap_write__ns1__DownloadFileById
#define soap_write__ns1__DownloadFileById(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:DownloadFileById", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__DownloadFileById * SOAP_FMAC4 soap_get__ns1__DownloadFileById(struct soap*, _ns1__DownloadFileById *, const char*, const char*);

#ifndef soap_read__ns1__DownloadFileById
#define soap_read__ns1__DownloadFileById(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__DownloadFileById(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__DownloadFileById * SOAP_FMAC2 soap_instantiate__ns1__DownloadFileById(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownloadFileById * soap_new__ns1__DownloadFileById(struct soap *soap, int n = -1) { return soap_instantiate__ns1__DownloadFileById(soap, n, NULL, NULL, NULL); }

inline _ns1__DownloadFileById * soap_new_req__ns1__DownloadFileById(struct soap *soap, int sessionId, int fileId) { _ns1__DownloadFileById *_p = soap_instantiate__ns1__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DownloadFileById::sessionId = sessionId; _p->_ns1__DownloadFileById::fileId = fileId; } return _p; }

inline _ns1__DownloadFileById * soap_new_set__ns1__DownloadFileById(struct soap *soap, int sessionId, char *clsName, int fileId) { _ns1__DownloadFileById *_p = soap_instantiate__ns1__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DownloadFileById::sessionId = sessionId; _p->_ns1__DownloadFileById::clsName = clsName; _p->_ns1__DownloadFileById::fileId = fileId; } return _p; }

inline void soap_delete__ns1__DownloadFileById(struct soap *soap, _ns1__DownloadFileById *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__DownloadFileById(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetObjectsVersionResponse
#define SOAP_TYPE__ns1__GetObjectsVersionResponse (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetObjectsVersionResponse(struct soap*, const char*, int, const _ns1__GetObjectsVersionResponse *, const char*);
SOAP_FMAC3 _ns1__GetObjectsVersionResponse * SOAP_FMAC4 soap_in__ns1__GetObjectsVersionResponse(struct soap*, const char*, _ns1__GetObjectsVersionResponse *, const char*);

#ifndef soap_write__ns1__GetObjectsVersionResponse
#define soap_write__ns1__GetObjectsVersionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetObjectsVersionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetObjectsVersionResponse * SOAP_FMAC4 soap_get__ns1__GetObjectsVersionResponse(struct soap*, _ns1__GetObjectsVersionResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetObjectsVersionResponse
#define soap_read__ns1__GetObjectsVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetObjectsVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetObjectsVersionResponse * SOAP_FMAC2 soap_instantiate__ns1__GetObjectsVersionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetObjectsVersionResponse * soap_new__ns1__GetObjectsVersionResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetObjectsVersionResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetObjectsVersionResponse * soap_new_req__ns1__GetObjectsVersionResponse(struct soap *soap) { _ns1__GetObjectsVersionResponse *_p = soap_instantiate__ns1__GetObjectsVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetObjectsVersionResponse * soap_new_set__ns1__GetObjectsVersionResponse(struct soap *soap, xsd__base64Binary *GetObjectsVersionResult) { _ns1__GetObjectsVersionResponse *_p = soap_instantiate__ns1__GetObjectsVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetObjectsVersionResponse::GetObjectsVersionResult = GetObjectsVersionResult; } return _p; }

inline void soap_delete__ns1__GetObjectsVersionResponse(struct soap *soap, _ns1__GetObjectsVersionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetObjectsVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetObjectsVersion
#define SOAP_TYPE__ns1__GetObjectsVersion (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetObjectsVersion(struct soap*, const char*, int, const _ns1__GetObjectsVersion *, const char*);
SOAP_FMAC3 _ns1__GetObjectsVersion * SOAP_FMAC4 soap_in__ns1__GetObjectsVersion(struct soap*, const char*, _ns1__GetObjectsVersion *, const char*);

#ifndef soap_write__ns1__GetObjectsVersion
#define soap_write__ns1__GetObjectsVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetObjectsVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetObjectsVersion * SOAP_FMAC4 soap_get__ns1__GetObjectsVersion(struct soap*, _ns1__GetObjectsVersion *, const char*, const char*);

#ifndef soap_read__ns1__GetObjectsVersion
#define soap_read__ns1__GetObjectsVersion(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetObjectsVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetObjectsVersion * SOAP_FMAC2 soap_instantiate__ns1__GetObjectsVersion(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetObjectsVersion * soap_new__ns1__GetObjectsVersion(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetObjectsVersion(soap, n, NULL, NULL, NULL); }

inline _ns1__GetObjectsVersion * soap_new_req__ns1__GetObjectsVersion(struct soap *soap, int sessionId) { _ns1__GetObjectsVersion *_p = soap_instantiate__ns1__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetObjectsVersion::sessionId = sessionId; } return _p; }

inline _ns1__GetObjectsVersion * soap_new_set__ns1__GetObjectsVersion(struct soap *soap, int sessionId, char *clsName, ns1__ArrayOfInt *idarr) { _ns1__GetObjectsVersion *_p = soap_instantiate__ns1__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetObjectsVersion::sessionId = sessionId; _p->_ns1__GetObjectsVersion::clsName = clsName; _p->_ns1__GetObjectsVersion::idarr = idarr; } return _p; }

inline void soap_delete__ns1__GetObjectsVersion(struct soap *soap, _ns1__GetObjectsVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetObjectsVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryObjectsResponse
#define SOAP_TYPE__ns1__QueryObjectsResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryObjectsResponse(struct soap*, const char*, int, const _ns1__QueryObjectsResponse *, const char*);
SOAP_FMAC3 _ns1__QueryObjectsResponse * SOAP_FMAC4 soap_in__ns1__QueryObjectsResponse(struct soap*, const char*, _ns1__QueryObjectsResponse *, const char*);

#ifndef soap_write__ns1__QueryObjectsResponse
#define soap_write__ns1__QueryObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjectsResponse * SOAP_FMAC4 soap_get__ns1__QueryObjectsResponse(struct soap*, _ns1__QueryObjectsResponse *, const char*, const char*);

#ifndef soap_read__ns1__QueryObjectsResponse
#define soap_read__ns1__QueryObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryObjectsResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryObjectsResponse * soap_new__ns1__QueryObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryObjectsResponse * soap_new_req__ns1__QueryObjectsResponse(struct soap *soap) { _ns1__QueryObjectsResponse *_p = soap_instantiate__ns1__QueryObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__QueryObjectsResponse * soap_new_set__ns1__QueryObjectsResponse(struct soap *soap, xsd__base64Binary *QueryObjectsResult) { _ns1__QueryObjectsResponse *_p = soap_instantiate__ns1__QueryObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjectsResponse::QueryObjectsResult = QueryObjectsResult; } return _p; }

inline void soap_delete__ns1__QueryObjectsResponse(struct soap *soap, _ns1__QueryObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryObjects
#define SOAP_TYPE__ns1__QueryObjects (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryObjects(struct soap*, const char*, int, const _ns1__QueryObjects *, const char*);
SOAP_FMAC3 _ns1__QueryObjects * SOAP_FMAC4 soap_in__ns1__QueryObjects(struct soap*, const char*, _ns1__QueryObjects *, const char*);

#ifndef soap_write__ns1__QueryObjects
#define soap_write__ns1__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjects * SOAP_FMAC4 soap_get__ns1__QueryObjects(struct soap*, _ns1__QueryObjects *, const char*, const char*);

#ifndef soap_read__ns1__QueryObjects
#define soap_read__ns1__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryObjects * SOAP_FMAC2 soap_instantiate__ns1__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryObjects * soap_new__ns1__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryObjects(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryObjects * soap_new_req__ns1__QueryObjects(struct soap *soap, int sessionId) { _ns1__QueryObjects *_p = soap_instantiate__ns1__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjects::sessionId = sessionId; } return _p; }

inline _ns1__QueryObjects * soap_new_set__ns1__QueryObjects(struct soap *soap, int sessionId, char *clsName, char *xmlScope) { _ns1__QueryObjects *_p = soap_instantiate__ns1__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjects::sessionId = sessionId; _p->_ns1__QueryObjects::clsName = clsName; _p->_ns1__QueryObjects::xmlScope = xmlScope; } return _p; }

inline void soap_delete__ns1__QueryObjects(struct soap *soap, _ns1__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__logoutUserResponse
#define SOAP_TYPE__ns1__logoutUserResponse (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__logoutUserResponse(struct soap*, const char*, int, const _ns1__logoutUserResponse *, const char*);
SOAP_FMAC3 _ns1__logoutUserResponse * SOAP_FMAC4 soap_in__ns1__logoutUserResponse(struct soap*, const char*, _ns1__logoutUserResponse *, const char*);

#ifndef soap_write__ns1__logoutUserResponse
#define soap_write__ns1__logoutUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:logoutUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__logoutUserResponse * SOAP_FMAC4 soap_get__ns1__logoutUserResponse(struct soap*, _ns1__logoutUserResponse *, const char*, const char*);

#ifndef soap_read__ns1__logoutUserResponse
#define soap_read__ns1__logoutUserResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__logoutUserResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__logoutUserResponse * SOAP_FMAC2 soap_instantiate__ns1__logoutUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__logoutUserResponse * soap_new__ns1__logoutUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__logoutUserResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__logoutUserResponse * soap_new_req__ns1__logoutUserResponse(struct soap *soap, int logoutUserResult) { _ns1__logoutUserResponse *_p = soap_instantiate__ns1__logoutUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__logoutUserResponse::logoutUserResult = logoutUserResult; } return _p; }

inline _ns1__logoutUserResponse * soap_new_set__ns1__logoutUserResponse(struct soap *soap, int logoutUserResult) { _ns1__logoutUserResponse *_p = soap_instantiate__ns1__logoutUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__logoutUserResponse::logoutUserResult = logoutUserResult; } return _p; }

inline void soap_delete__ns1__logoutUserResponse(struct soap *soap, _ns1__logoutUserResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__logoutUserResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__logoutUser
#define SOAP_TYPE__ns1__logoutUser (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__logoutUser(struct soap*, const char*, int, const _ns1__logoutUser *, const char*);
SOAP_FMAC3 _ns1__logoutUser * SOAP_FMAC4 soap_in__ns1__logoutUser(struct soap*, const char*, _ns1__logoutUser *, const char*);

#ifndef soap_write__ns1__logoutUser
#define soap_write__ns1__logoutUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:logoutUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__logoutUser * SOAP_FMAC4 soap_get__ns1__logoutUser(struct soap*, _ns1__logoutUser *, const char*, const char*);

#ifndef soap_read__ns1__logoutUser
#define soap_read__ns1__logoutUser(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__logoutUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__logoutUser * SOAP_FMAC2 soap_instantiate__ns1__logoutUser(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__logoutUser * soap_new__ns1__logoutUser(struct soap *soap, int n = -1) { return soap_instantiate__ns1__logoutUser(soap, n, NULL, NULL, NULL); }

inline _ns1__logoutUser * soap_new_req__ns1__logoutUser(struct soap *soap, int sessionId) { _ns1__logoutUser *_p = soap_instantiate__ns1__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__logoutUser::sessionId = sessionId; } return _p; }

inline _ns1__logoutUser * soap_new_set__ns1__logoutUser(struct soap *soap, int sessionId) { _ns1__logoutUser *_p = soap_instantiate__ns1__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__logoutUser::sessionId = sessionId; } return _p; }

inline void soap_delete__ns1__logoutUser(struct soap *soap, _ns1__logoutUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__logoutUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__loginUserResponse
#define SOAP_TYPE__ns1__loginUserResponse (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__loginUserResponse(struct soap*, const char*, int, const _ns1__loginUserResponse *, const char*);
SOAP_FMAC3 _ns1__loginUserResponse * SOAP_FMAC4 soap_in__ns1__loginUserResponse(struct soap*, const char*, _ns1__loginUserResponse *, const char*);

#ifndef soap_write__ns1__loginUserResponse
#define soap_write__ns1__loginUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:loginUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__loginUserResponse * SOAP_FMAC4 soap_get__ns1__loginUserResponse(struct soap*, _ns1__loginUserResponse *, const char*, const char*);

#ifndef soap_read__ns1__loginUserResponse
#define soap_read__ns1__loginUserResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__loginUserResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__loginUserResponse * SOAP_FMAC2 soap_instantiate__ns1__loginUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__loginUserResponse * soap_new__ns1__loginUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__loginUserResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__loginUserResponse * soap_new_req__ns1__loginUserResponse(struct soap *soap, int loginUserResult) { _ns1__loginUserResponse *_p = soap_instantiate__ns1__loginUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__loginUserResponse::loginUserResult = loginUserResult; } return _p; }

inline _ns1__loginUserResponse * soap_new_set__ns1__loginUserResponse(struct soap *soap, int loginUserResult) { _ns1__loginUserResponse *_p = soap_instantiate__ns1__loginUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__loginUserResponse::loginUserResult = loginUserResult; } return _p; }

inline void soap_delete__ns1__loginUserResponse(struct soap *soap, _ns1__loginUserResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__loginUserResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__loginUser
#define SOAP_TYPE__ns1__loginUser (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__loginUser(struct soap*, const char*, int, const _ns1__loginUser *, const char*);
SOAP_FMAC3 _ns1__loginUser * SOAP_FMAC4 soap_in__ns1__loginUser(struct soap*, const char*, _ns1__loginUser *, const char*);

#ifndef soap_write__ns1__loginUser
#define soap_write__ns1__loginUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:loginUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__loginUser * SOAP_FMAC4 soap_get__ns1__loginUser(struct soap*, _ns1__loginUser *, const char*, const char*);

#ifndef soap_read__ns1__loginUser
#define soap_read__ns1__loginUser(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__loginUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__loginUser * SOAP_FMAC2 soap_instantiate__ns1__loginUser(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__loginUser * soap_new__ns1__loginUser(struct soap *soap, int n = -1) { return soap_instantiate__ns1__loginUser(soap, n, NULL, NULL, NULL); }

inline _ns1__loginUser * soap_new_req__ns1__loginUser(struct soap *soap) { _ns1__loginUser *_p = soap_instantiate__ns1__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__loginUser * soap_new_set__ns1__loginUser(struct soap *soap, char *userName, char *password, char *fingerprint) { _ns1__loginUser *_p = soap_instantiate__ns1__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__loginUser::userName = userName; _p->_ns1__loginUser::password = password; _p->_ns1__loginUser::fingerprint = fingerprint; } return _p; }

inline void soap_delete__ns1__loginUser(struct soap *soap, _ns1__loginUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__loginUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ArrayOfInt
#define SOAP_TYPE_ns1__ArrayOfInt (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfInt(struct soap*, const char*, int, const ns1__ArrayOfInt *, const char*);
SOAP_FMAC3 ns1__ArrayOfInt * SOAP_FMAC4 soap_in_ns1__ArrayOfInt(struct soap*, const char*, ns1__ArrayOfInt *, const char*);

#ifndef soap_write_ns1__ArrayOfInt
#define soap_write_ns1__ArrayOfInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ArrayOfInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfInt * SOAP_FMAC4 soap_get_ns1__ArrayOfInt(struct soap*, ns1__ArrayOfInt *, const char*, const char*);

#ifndef soap_read_ns1__ArrayOfInt
#define soap_read_ns1__ArrayOfInt(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ArrayOfInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ArrayOfInt * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfInt(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfInt * soap_new_ns1__ArrayOfInt(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ArrayOfInt(soap, n, NULL, NULL, NULL); }

inline ns1__ArrayOfInt * soap_new_req_ns1__ArrayOfInt(struct soap *soap, int __sizeint_, int *int_) { ns1__ArrayOfInt *_p = soap_instantiate_ns1__ArrayOfInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfInt::__sizeint_ = __sizeint_; _p->ns1__ArrayOfInt::int_ = int_; } return _p; }

inline ns1__ArrayOfInt * soap_new_set_ns1__ArrayOfInt(struct soap *soap, int __sizeint_, int *int_) { ns1__ArrayOfInt *_p = soap_instantiate_ns1__ArrayOfInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfInt::__sizeint_ = __sizeint_; _p->ns1__ArrayOfInt::int_ = int_; } return _p; }

inline void soap_delete_ns1__ArrayOfInt(struct soap *soap, ns1__ArrayOfInt *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfInt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(struct soap *soap) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary::__ptr = __ptr; _p->xsd__base64Binary::__size = __size; _p->xsd__base64Binary::id = id; _p->xsd__base64Binary::type = type; _p->xsd__base64Binary::options = options; } return _p; }

inline void soap_delete_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__DeleteObject_
#define SOAP_TYPE___ns1__DeleteObject_ (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DeleteObject_(struct soap*, struct __ns1__DeleteObject_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DeleteObject_(struct soap*, const struct __ns1__DeleteObject_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DeleteObject_(struct soap*, const char*, int, const struct __ns1__DeleteObject_ *, const char*);
SOAP_FMAC3 struct __ns1__DeleteObject_ * SOAP_FMAC4 soap_in___ns1__DeleteObject_(struct soap*, const char*, struct __ns1__DeleteObject_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DeleteObject_(struct soap*, const struct __ns1__DeleteObject_ *, const char*, const char*);

#ifndef soap_write___ns1__DeleteObject_
#define soap_write___ns1__DeleteObject_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__DeleteObject_(soap, data),0) || soap_put___ns1__DeleteObject_(soap, data, "-ns1:DeleteObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__DeleteObject_ * SOAP_FMAC4 soap_get___ns1__DeleteObject_(struct soap*, struct __ns1__DeleteObject_ *, const char*, const char*);

#ifndef soap_read___ns1__DeleteObject_
#define soap_read___ns1__DeleteObject_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__DeleteObject_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__DeleteObject_ * SOAP_FMAC2 soap_instantiate___ns1__DeleteObject_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DeleteObject_ * soap_new___ns1__DeleteObject_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__DeleteObject_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__DeleteObject_ * soap_new_req___ns1__DeleteObject_(struct soap *soap) { struct __ns1__DeleteObject_ *_p = soap_instantiate___ns1__DeleteObject_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DeleteObject_(soap, _p); } return _p; }

inline struct __ns1__DeleteObject_ * soap_new_set___ns1__DeleteObject_(struct soap *soap, _ns1__DeleteObject *ns1__DeleteObject) { struct __ns1__DeleteObject_ *_p = soap_instantiate___ns1__DeleteObject_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DeleteObject_(soap, _p); _p->ns1__DeleteObject = ns1__DeleteObject; } return _p; }

inline void soap_delete___ns1__DeleteObject_(struct soap *soap, struct __ns1__DeleteObject_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__DeleteObject_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SaveOrUpdateObjects_
#define SOAP_TYPE___ns1__SaveOrUpdateObjects_ (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveOrUpdateObjects_(struct soap*, struct __ns1__SaveOrUpdateObjects_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveOrUpdateObjects_(struct soap*, const struct __ns1__SaveOrUpdateObjects_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveOrUpdateObjects_(struct soap*, const char*, int, const struct __ns1__SaveOrUpdateObjects_ *, const char*);
SOAP_FMAC3 struct __ns1__SaveOrUpdateObjects_ * SOAP_FMAC4 soap_in___ns1__SaveOrUpdateObjects_(struct soap*, const char*, struct __ns1__SaveOrUpdateObjects_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveOrUpdateObjects_(struct soap*, const struct __ns1__SaveOrUpdateObjects_ *, const char*, const char*);

#ifndef soap_write___ns1__SaveOrUpdateObjects_
#define soap_write___ns1__SaveOrUpdateObjects_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SaveOrUpdateObjects_(soap, data),0) || soap_put___ns1__SaveOrUpdateObjects_(soap, data, "-ns1:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SaveOrUpdateObjects_ * SOAP_FMAC4 soap_get___ns1__SaveOrUpdateObjects_(struct soap*, struct __ns1__SaveOrUpdateObjects_ *, const char*, const char*);

#ifndef soap_read___ns1__SaveOrUpdateObjects_
#define soap_read___ns1__SaveOrUpdateObjects_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SaveOrUpdateObjects_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SaveOrUpdateObjects_ * SOAP_FMAC2 soap_instantiate___ns1__SaveOrUpdateObjects_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveOrUpdateObjects_ * soap_new___ns1__SaveOrUpdateObjects_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SaveOrUpdateObjects_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SaveOrUpdateObjects_ * soap_new_req___ns1__SaveOrUpdateObjects_(struct soap *soap) { struct __ns1__SaveOrUpdateObjects_ *_p = soap_instantiate___ns1__SaveOrUpdateObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SaveOrUpdateObjects_(soap, _p); } return _p; }

inline struct __ns1__SaveOrUpdateObjects_ * soap_new_set___ns1__SaveOrUpdateObjects_(struct soap *soap, _ns1__SaveOrUpdateObjects *ns1__SaveOrUpdateObjects) { struct __ns1__SaveOrUpdateObjects_ *_p = soap_instantiate___ns1__SaveOrUpdateObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SaveOrUpdateObjects_(soap, _p); _p->ns1__SaveOrUpdateObjects = ns1__SaveOrUpdateObjects; } return _p; }

inline void soap_delete___ns1__SaveOrUpdateObjects_(struct soap *soap, struct __ns1__SaveOrUpdateObjects_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SaveOrUpdateObjects_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__DownloadFileById_
#define SOAP_TYPE___ns1__DownloadFileById_ (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownloadFileById_(struct soap*, struct __ns1__DownloadFileById_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownloadFileById_(struct soap*, const struct __ns1__DownloadFileById_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownloadFileById_(struct soap*, const char*, int, const struct __ns1__DownloadFileById_ *, const char*);
SOAP_FMAC3 struct __ns1__DownloadFileById_ * SOAP_FMAC4 soap_in___ns1__DownloadFileById_(struct soap*, const char*, struct __ns1__DownloadFileById_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownloadFileById_(struct soap*, const struct __ns1__DownloadFileById_ *, const char*, const char*);

#ifndef soap_write___ns1__DownloadFileById_
#define soap_write___ns1__DownloadFileById_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__DownloadFileById_(soap, data),0) || soap_put___ns1__DownloadFileById_(soap, data, "-ns1:DownloadFileById", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__DownloadFileById_ * SOAP_FMAC4 soap_get___ns1__DownloadFileById_(struct soap*, struct __ns1__DownloadFileById_ *, const char*, const char*);

#ifndef soap_read___ns1__DownloadFileById_
#define soap_read___ns1__DownloadFileById_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__DownloadFileById_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__DownloadFileById_ * SOAP_FMAC2 soap_instantiate___ns1__DownloadFileById_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownloadFileById_ * soap_new___ns1__DownloadFileById_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__DownloadFileById_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__DownloadFileById_ * soap_new_req___ns1__DownloadFileById_(struct soap *soap) { struct __ns1__DownloadFileById_ *_p = soap_instantiate___ns1__DownloadFileById_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DownloadFileById_(soap, _p); } return _p; }

inline struct __ns1__DownloadFileById_ * soap_new_set___ns1__DownloadFileById_(struct soap *soap, _ns1__DownloadFileById *ns1__DownloadFileById) { struct __ns1__DownloadFileById_ *_p = soap_instantiate___ns1__DownloadFileById_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DownloadFileById_(soap, _p); _p->ns1__DownloadFileById = ns1__DownloadFileById; } return _p; }

inline void soap_delete___ns1__DownloadFileById_(struct soap *soap, struct __ns1__DownloadFileById_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__DownloadFileById_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetObjectsVersion_
#define SOAP_TYPE___ns1__GetObjectsVersion_ (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetObjectsVersion_(struct soap*, struct __ns1__GetObjectsVersion_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetObjectsVersion_(struct soap*, const struct __ns1__GetObjectsVersion_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetObjectsVersion_(struct soap*, const char*, int, const struct __ns1__GetObjectsVersion_ *, const char*);
SOAP_FMAC3 struct __ns1__GetObjectsVersion_ * SOAP_FMAC4 soap_in___ns1__GetObjectsVersion_(struct soap*, const char*, struct __ns1__GetObjectsVersion_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetObjectsVersion_(struct soap*, const struct __ns1__GetObjectsVersion_ *, const char*, const char*);

#ifndef soap_write___ns1__GetObjectsVersion_
#define soap_write___ns1__GetObjectsVersion_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetObjectsVersion_(soap, data),0) || soap_put___ns1__GetObjectsVersion_(soap, data, "-ns1:GetObjectsVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetObjectsVersion_ * SOAP_FMAC4 soap_get___ns1__GetObjectsVersion_(struct soap*, struct __ns1__GetObjectsVersion_ *, const char*, const char*);

#ifndef soap_read___ns1__GetObjectsVersion_
#define soap_read___ns1__GetObjectsVersion_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetObjectsVersion_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetObjectsVersion_ * SOAP_FMAC2 soap_instantiate___ns1__GetObjectsVersion_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetObjectsVersion_ * soap_new___ns1__GetObjectsVersion_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetObjectsVersion_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetObjectsVersion_ * soap_new_req___ns1__GetObjectsVersion_(struct soap *soap) { struct __ns1__GetObjectsVersion_ *_p = soap_instantiate___ns1__GetObjectsVersion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetObjectsVersion_(soap, _p); } return _p; }

inline struct __ns1__GetObjectsVersion_ * soap_new_set___ns1__GetObjectsVersion_(struct soap *soap, _ns1__GetObjectsVersion *ns1__GetObjectsVersion) { struct __ns1__GetObjectsVersion_ *_p = soap_instantiate___ns1__GetObjectsVersion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetObjectsVersion_(soap, _p); _p->ns1__GetObjectsVersion = ns1__GetObjectsVersion; } return _p; }

inline void soap_delete___ns1__GetObjectsVersion_(struct soap *soap, struct __ns1__GetObjectsVersion_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetObjectsVersion_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryObjects_
#define SOAP_TYPE___ns1__QueryObjects_ (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryObjects_(struct soap*, struct __ns1__QueryObjects_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryObjects_(struct soap*, const struct __ns1__QueryObjects_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryObjects_(struct soap*, const char*, int, const struct __ns1__QueryObjects_ *, const char*);
SOAP_FMAC3 struct __ns1__QueryObjects_ * SOAP_FMAC4 soap_in___ns1__QueryObjects_(struct soap*, const char*, struct __ns1__QueryObjects_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryObjects_(struct soap*, const struct __ns1__QueryObjects_ *, const char*, const char*);

#ifndef soap_write___ns1__QueryObjects_
#define soap_write___ns1__QueryObjects_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryObjects_(soap, data),0) || soap_put___ns1__QueryObjects_(soap, data, "-ns1:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryObjects_ * SOAP_FMAC4 soap_get___ns1__QueryObjects_(struct soap*, struct __ns1__QueryObjects_ *, const char*, const char*);

#ifndef soap_read___ns1__QueryObjects_
#define soap_read___ns1__QueryObjects_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryObjects_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryObjects_ * SOAP_FMAC2 soap_instantiate___ns1__QueryObjects_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryObjects_ * soap_new___ns1__QueryObjects_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryObjects_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryObjects_ * soap_new_req___ns1__QueryObjects_(struct soap *soap) { struct __ns1__QueryObjects_ *_p = soap_instantiate___ns1__QueryObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjects_(soap, _p); } return _p; }

inline struct __ns1__QueryObjects_ * soap_new_set___ns1__QueryObjects_(struct soap *soap, _ns1__QueryObjects *ns1__QueryObjects) { struct __ns1__QueryObjects_ *_p = soap_instantiate___ns1__QueryObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjects_(soap, _p); _p->ns1__QueryObjects = ns1__QueryObjects; } return _p; }

inline void soap_delete___ns1__QueryObjects_(struct soap *soap, struct __ns1__QueryObjects_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryObjects_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__logoutUser_
#define SOAP_TYPE___ns1__logoutUser_ (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__logoutUser_(struct soap*, struct __ns1__logoutUser_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__logoutUser_(struct soap*, const struct __ns1__logoutUser_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__logoutUser_(struct soap*, const char*, int, const struct __ns1__logoutUser_ *, const char*);
SOAP_FMAC3 struct __ns1__logoutUser_ * SOAP_FMAC4 soap_in___ns1__logoutUser_(struct soap*, const char*, struct __ns1__logoutUser_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__logoutUser_(struct soap*, const struct __ns1__logoutUser_ *, const char*, const char*);

#ifndef soap_write___ns1__logoutUser_
#define soap_write___ns1__logoutUser_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__logoutUser_(soap, data),0) || soap_put___ns1__logoutUser_(soap, data, "-ns1:logoutUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__logoutUser_ * SOAP_FMAC4 soap_get___ns1__logoutUser_(struct soap*, struct __ns1__logoutUser_ *, const char*, const char*);

#ifndef soap_read___ns1__logoutUser_
#define soap_read___ns1__logoutUser_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__logoutUser_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__logoutUser_ * SOAP_FMAC2 soap_instantiate___ns1__logoutUser_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__logoutUser_ * soap_new___ns1__logoutUser_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__logoutUser_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__logoutUser_ * soap_new_req___ns1__logoutUser_(struct soap *soap) { struct __ns1__logoutUser_ *_p = soap_instantiate___ns1__logoutUser_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__logoutUser_(soap, _p); } return _p; }

inline struct __ns1__logoutUser_ * soap_new_set___ns1__logoutUser_(struct soap *soap, _ns1__logoutUser *ns1__logoutUser) { struct __ns1__logoutUser_ *_p = soap_instantiate___ns1__logoutUser_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__logoutUser_(soap, _p); _p->ns1__logoutUser = ns1__logoutUser; } return _p; }

inline void soap_delete___ns1__logoutUser_(struct soap *soap, struct __ns1__logoutUser_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__logoutUser_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__loginUser_
#define SOAP_TYPE___ns1__loginUser_ (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__loginUser_(struct soap*, struct __ns1__loginUser_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__loginUser_(struct soap*, const struct __ns1__loginUser_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__loginUser_(struct soap*, const char*, int, const struct __ns1__loginUser_ *, const char*);
SOAP_FMAC3 struct __ns1__loginUser_ * SOAP_FMAC4 soap_in___ns1__loginUser_(struct soap*, const char*, struct __ns1__loginUser_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__loginUser_(struct soap*, const struct __ns1__loginUser_ *, const char*, const char*);

#ifndef soap_write___ns1__loginUser_
#define soap_write___ns1__loginUser_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__loginUser_(soap, data),0) || soap_put___ns1__loginUser_(soap, data, "-ns1:loginUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__loginUser_ * SOAP_FMAC4 soap_get___ns1__loginUser_(struct soap*, struct __ns1__loginUser_ *, const char*, const char*);

#ifndef soap_read___ns1__loginUser_
#define soap_read___ns1__loginUser_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__loginUser_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__loginUser_ * SOAP_FMAC2 soap_instantiate___ns1__loginUser_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__loginUser_ * soap_new___ns1__loginUser_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__loginUser_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__loginUser_ * soap_new_req___ns1__loginUser_(struct soap *soap) { struct __ns1__loginUser_ *_p = soap_instantiate___ns1__loginUser_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loginUser_(soap, _p); } return _p; }

inline struct __ns1__loginUser_ * soap_new_set___ns1__loginUser_(struct soap *soap, _ns1__loginUser *ns1__loginUser) { struct __ns1__loginUser_ *_p = soap_instantiate___ns1__loginUser_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loginUser_(soap, _p); _p->ns1__loginUser = ns1__loginUser; } return _p; }

inline void soap_delete___ns1__loginUser_(struct soap *soap, struct __ns1__loginUser_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__loginUser_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__DeleteObject
#define SOAP_TYPE___ns1__DeleteObject (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DeleteObject(struct soap*, struct __ns1__DeleteObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DeleteObject(struct soap*, const struct __ns1__DeleteObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DeleteObject(struct soap*, const char*, int, const struct __ns1__DeleteObject *, const char*);
SOAP_FMAC3 struct __ns1__DeleteObject * SOAP_FMAC4 soap_in___ns1__DeleteObject(struct soap*, const char*, struct __ns1__DeleteObject *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DeleteObject(struct soap*, const struct __ns1__DeleteObject *, const char*, const char*);

#ifndef soap_write___ns1__DeleteObject
#define soap_write___ns1__DeleteObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__DeleteObject(soap, data),0) || soap_put___ns1__DeleteObject(soap, data, "-ns1:DeleteObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__DeleteObject * SOAP_FMAC4 soap_get___ns1__DeleteObject(struct soap*, struct __ns1__DeleteObject *, const char*, const char*);

#ifndef soap_read___ns1__DeleteObject
#define soap_read___ns1__DeleteObject(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__DeleteObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__DeleteObject * SOAP_FMAC2 soap_instantiate___ns1__DeleteObject(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DeleteObject * soap_new___ns1__DeleteObject(struct soap *soap, int n = -1) { return soap_instantiate___ns1__DeleteObject(soap, n, NULL, NULL, NULL); }

inline struct __ns1__DeleteObject * soap_new_req___ns1__DeleteObject(struct soap *soap) { struct __ns1__DeleteObject *_p = soap_instantiate___ns1__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DeleteObject(soap, _p); } return _p; }

inline struct __ns1__DeleteObject * soap_new_set___ns1__DeleteObject(struct soap *soap, _ns1__DeleteObject *ns1__DeleteObject) { struct __ns1__DeleteObject *_p = soap_instantiate___ns1__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DeleteObject(soap, _p); _p->ns1__DeleteObject = ns1__DeleteObject; } return _p; }

inline void soap_delete___ns1__DeleteObject(struct soap *soap, struct __ns1__DeleteObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__DeleteObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SaveOrUpdateObjects
#define SOAP_TYPE___ns1__SaveOrUpdateObjects (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveOrUpdateObjects(struct soap*, struct __ns1__SaveOrUpdateObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveOrUpdateObjects(struct soap*, const struct __ns1__SaveOrUpdateObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveOrUpdateObjects(struct soap*, const char*, int, const struct __ns1__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 struct __ns1__SaveOrUpdateObjects * SOAP_FMAC4 soap_in___ns1__SaveOrUpdateObjects(struct soap*, const char*, struct __ns1__SaveOrUpdateObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveOrUpdateObjects(struct soap*, const struct __ns1__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_write___ns1__SaveOrUpdateObjects
#define soap_write___ns1__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SaveOrUpdateObjects(soap, data),0) || soap_put___ns1__SaveOrUpdateObjects(soap, data, "-ns1:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SaveOrUpdateObjects * SOAP_FMAC4 soap_get___ns1__SaveOrUpdateObjects(struct soap*, struct __ns1__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read___ns1__SaveOrUpdateObjects
#define soap_read___ns1__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate___ns1__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveOrUpdateObjects * soap_new___ns1__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SaveOrUpdateObjects * soap_new_req___ns1__SaveOrUpdateObjects(struct soap *soap) { struct __ns1__SaveOrUpdateObjects *_p = soap_instantiate___ns1__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SaveOrUpdateObjects(soap, _p); } return _p; }

inline struct __ns1__SaveOrUpdateObjects * soap_new_set___ns1__SaveOrUpdateObjects(struct soap *soap, _ns1__SaveOrUpdateObjects *ns1__SaveOrUpdateObjects) { struct __ns1__SaveOrUpdateObjects *_p = soap_instantiate___ns1__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SaveOrUpdateObjects(soap, _p); _p->ns1__SaveOrUpdateObjects = ns1__SaveOrUpdateObjects; } return _p; }

inline void soap_delete___ns1__SaveOrUpdateObjects(struct soap *soap, struct __ns1__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__DownloadFileById
#define SOAP_TYPE___ns1__DownloadFileById (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownloadFileById(struct soap*, struct __ns1__DownloadFileById *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownloadFileById(struct soap*, const struct __ns1__DownloadFileById *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownloadFileById(struct soap*, const char*, int, const struct __ns1__DownloadFileById *, const char*);
SOAP_FMAC3 struct __ns1__DownloadFileById * SOAP_FMAC4 soap_in___ns1__DownloadFileById(struct soap*, const char*, struct __ns1__DownloadFileById *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownloadFileById(struct soap*, const struct __ns1__DownloadFileById *, const char*, const char*);

#ifndef soap_write___ns1__DownloadFileById
#define soap_write___ns1__DownloadFileById(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__DownloadFileById(soap, data),0) || soap_put___ns1__DownloadFileById(soap, data, "-ns1:DownloadFileById", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__DownloadFileById * SOAP_FMAC4 soap_get___ns1__DownloadFileById(struct soap*, struct __ns1__DownloadFileById *, const char*, const char*);

#ifndef soap_read___ns1__DownloadFileById
#define soap_read___ns1__DownloadFileById(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__DownloadFileById(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__DownloadFileById * SOAP_FMAC2 soap_instantiate___ns1__DownloadFileById(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownloadFileById * soap_new___ns1__DownloadFileById(struct soap *soap, int n = -1) { return soap_instantiate___ns1__DownloadFileById(soap, n, NULL, NULL, NULL); }

inline struct __ns1__DownloadFileById * soap_new_req___ns1__DownloadFileById(struct soap *soap) { struct __ns1__DownloadFileById *_p = soap_instantiate___ns1__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DownloadFileById(soap, _p); } return _p; }

inline struct __ns1__DownloadFileById * soap_new_set___ns1__DownloadFileById(struct soap *soap, _ns1__DownloadFileById *ns1__DownloadFileById) { struct __ns1__DownloadFileById *_p = soap_instantiate___ns1__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DownloadFileById(soap, _p); _p->ns1__DownloadFileById = ns1__DownloadFileById; } return _p; }

inline void soap_delete___ns1__DownloadFileById(struct soap *soap, struct __ns1__DownloadFileById *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__DownloadFileById(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetObjectsVersion
#define SOAP_TYPE___ns1__GetObjectsVersion (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetObjectsVersion(struct soap*, struct __ns1__GetObjectsVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetObjectsVersion(struct soap*, const struct __ns1__GetObjectsVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetObjectsVersion(struct soap*, const char*, int, const struct __ns1__GetObjectsVersion *, const char*);
SOAP_FMAC3 struct __ns1__GetObjectsVersion * SOAP_FMAC4 soap_in___ns1__GetObjectsVersion(struct soap*, const char*, struct __ns1__GetObjectsVersion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetObjectsVersion(struct soap*, const struct __ns1__GetObjectsVersion *, const char*, const char*);

#ifndef soap_write___ns1__GetObjectsVersion
#define soap_write___ns1__GetObjectsVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetObjectsVersion(soap, data),0) || soap_put___ns1__GetObjectsVersion(soap, data, "-ns1:GetObjectsVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetObjectsVersion * SOAP_FMAC4 soap_get___ns1__GetObjectsVersion(struct soap*, struct __ns1__GetObjectsVersion *, const char*, const char*);

#ifndef soap_read___ns1__GetObjectsVersion
#define soap_read___ns1__GetObjectsVersion(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetObjectsVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetObjectsVersion * SOAP_FMAC2 soap_instantiate___ns1__GetObjectsVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetObjectsVersion * soap_new___ns1__GetObjectsVersion(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetObjectsVersion(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetObjectsVersion * soap_new_req___ns1__GetObjectsVersion(struct soap *soap) { struct __ns1__GetObjectsVersion *_p = soap_instantiate___ns1__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetObjectsVersion(soap, _p); } return _p; }

inline struct __ns1__GetObjectsVersion * soap_new_set___ns1__GetObjectsVersion(struct soap *soap, _ns1__GetObjectsVersion *ns1__GetObjectsVersion) { struct __ns1__GetObjectsVersion *_p = soap_instantiate___ns1__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetObjectsVersion(soap, _p); _p->ns1__GetObjectsVersion = ns1__GetObjectsVersion; } return _p; }

inline void soap_delete___ns1__GetObjectsVersion(struct soap *soap, struct __ns1__GetObjectsVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetObjectsVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryObjects
#define SOAP_TYPE___ns1__QueryObjects (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryObjects(struct soap*, struct __ns1__QueryObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryObjects(struct soap*, const struct __ns1__QueryObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryObjects(struct soap*, const char*, int, const struct __ns1__QueryObjects *, const char*);
SOAP_FMAC3 struct __ns1__QueryObjects * SOAP_FMAC4 soap_in___ns1__QueryObjects(struct soap*, const char*, struct __ns1__QueryObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryObjects(struct soap*, const struct __ns1__QueryObjects *, const char*, const char*);

#ifndef soap_write___ns1__QueryObjects
#define soap_write___ns1__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryObjects(soap, data),0) || soap_put___ns1__QueryObjects(soap, data, "-ns1:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryObjects * SOAP_FMAC4 soap_get___ns1__QueryObjects(struct soap*, struct __ns1__QueryObjects *, const char*, const char*);

#ifndef soap_read___ns1__QueryObjects
#define soap_read___ns1__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryObjects * SOAP_FMAC2 soap_instantiate___ns1__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryObjects * soap_new___ns1__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryObjects(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryObjects * soap_new_req___ns1__QueryObjects(struct soap *soap) { struct __ns1__QueryObjects *_p = soap_instantiate___ns1__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjects(soap, _p); } return _p; }

inline struct __ns1__QueryObjects * soap_new_set___ns1__QueryObjects(struct soap *soap, _ns1__QueryObjects *ns1__QueryObjects) { struct __ns1__QueryObjects *_p = soap_instantiate___ns1__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjects(soap, _p); _p->ns1__QueryObjects = ns1__QueryObjects; } return _p; }

inline void soap_delete___ns1__QueryObjects(struct soap *soap, struct __ns1__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__logoutUser
#define SOAP_TYPE___ns1__logoutUser (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__logoutUser(struct soap*, struct __ns1__logoutUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__logoutUser(struct soap*, const struct __ns1__logoutUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__logoutUser(struct soap*, const char*, int, const struct __ns1__logoutUser *, const char*);
SOAP_FMAC3 struct __ns1__logoutUser * SOAP_FMAC4 soap_in___ns1__logoutUser(struct soap*, const char*, struct __ns1__logoutUser *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__logoutUser(struct soap*, const struct __ns1__logoutUser *, const char*, const char*);

#ifndef soap_write___ns1__logoutUser
#define soap_write___ns1__logoutUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__logoutUser(soap, data),0) || soap_put___ns1__logoutUser(soap, data, "-ns1:logoutUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__logoutUser * SOAP_FMAC4 soap_get___ns1__logoutUser(struct soap*, struct __ns1__logoutUser *, const char*, const char*);

#ifndef soap_read___ns1__logoutUser
#define soap_read___ns1__logoutUser(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__logoutUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__logoutUser * SOAP_FMAC2 soap_instantiate___ns1__logoutUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__logoutUser * soap_new___ns1__logoutUser(struct soap *soap, int n = -1) { return soap_instantiate___ns1__logoutUser(soap, n, NULL, NULL, NULL); }

inline struct __ns1__logoutUser * soap_new_req___ns1__logoutUser(struct soap *soap) { struct __ns1__logoutUser *_p = soap_instantiate___ns1__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__logoutUser(soap, _p); } return _p; }

inline struct __ns1__logoutUser * soap_new_set___ns1__logoutUser(struct soap *soap, _ns1__logoutUser *ns1__logoutUser) { struct __ns1__logoutUser *_p = soap_instantiate___ns1__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__logoutUser(soap, _p); _p->ns1__logoutUser = ns1__logoutUser; } return _p; }

inline void soap_delete___ns1__logoutUser(struct soap *soap, struct __ns1__logoutUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__logoutUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__loginUser
#define SOAP_TYPE___ns1__loginUser (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__loginUser(struct soap*, struct __ns1__loginUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__loginUser(struct soap*, const struct __ns1__loginUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__loginUser(struct soap*, const char*, int, const struct __ns1__loginUser *, const char*);
SOAP_FMAC3 struct __ns1__loginUser * SOAP_FMAC4 soap_in___ns1__loginUser(struct soap*, const char*, struct __ns1__loginUser *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__loginUser(struct soap*, const struct __ns1__loginUser *, const char*, const char*);

#ifndef soap_write___ns1__loginUser
#define soap_write___ns1__loginUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__loginUser(soap, data),0) || soap_put___ns1__loginUser(soap, data, "-ns1:loginUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__loginUser * SOAP_FMAC4 soap_get___ns1__loginUser(struct soap*, struct __ns1__loginUser *, const char*, const char*);

#ifndef soap_read___ns1__loginUser
#define soap_read___ns1__loginUser(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__loginUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__loginUser * SOAP_FMAC2 soap_instantiate___ns1__loginUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__loginUser * soap_new___ns1__loginUser(struct soap *soap, int n = -1) { return soap_instantiate___ns1__loginUser(soap, n, NULL, NULL, NULL); }

inline struct __ns1__loginUser * soap_new_req___ns1__loginUser(struct soap *soap) { struct __ns1__loginUser *_p = soap_instantiate___ns1__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loginUser(soap, _p); } return _p; }

inline struct __ns1__loginUser * soap_new_set___ns1__loginUser(struct soap *soap, _ns1__loginUser *ns1__loginUser) { struct __ns1__loginUser *_p = soap_instantiate___ns1__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loginUser(soap, _p); _p->ns1__loginUser = ns1__loginUser; } return _p; }

inline void soap_delete___ns1__loginUser(struct soap *soap, struct __ns1__loginUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__loginUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__DeleteObject
#define SOAP_TYPE_PointerTo_ns1__DeleteObject (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DeleteObject(struct soap*, _ns1__DeleteObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DeleteObject(struct soap*, const char *, int, _ns1__DeleteObject *const*, const char *);
SOAP_FMAC3 _ns1__DeleteObject ** SOAP_FMAC4 soap_in_PointerTo_ns1__DeleteObject(struct soap*, const char*, _ns1__DeleteObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DeleteObject(struct soap*, _ns1__DeleteObject *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__DeleteObject
#define soap_write_PointerTo_ns1__DeleteObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__DeleteObject(soap, data),0) || soap_put_PointerTo_ns1__DeleteObject(soap, data, "ns1:DeleteObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__DeleteObject ** SOAP_FMAC4 soap_get_PointerTo_ns1__DeleteObject(struct soap*, _ns1__DeleteObject **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__DeleteObject
#define soap_read_PointerTo_ns1__DeleteObject(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__DeleteObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SaveOrUpdateObjects
#define SOAP_TYPE_PointerTo_ns1__SaveOrUpdateObjects (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, _ns1__SaveOrUpdateObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, const char *, int, _ns1__SaveOrUpdateObjects *const*, const char *);
SOAP_FMAC3 _ns1__SaveOrUpdateObjects ** SOAP_FMAC4 soap_in_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, const char*, _ns1__SaveOrUpdateObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, _ns1__SaveOrUpdateObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SaveOrUpdateObjects
#define soap_write_PointerTo_ns1__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SaveOrUpdateObjects(soap, data),0) || soap_put_PointerTo_ns1__SaveOrUpdateObjects(soap, data, "ns1:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SaveOrUpdateObjects ** SOAP_FMAC4 soap_get_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, _ns1__SaveOrUpdateObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SaveOrUpdateObjects
#define soap_read_PointerTo_ns1__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__DownloadFileById
#define SOAP_TYPE_PointerTo_ns1__DownloadFileById (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DownloadFileById(struct soap*, _ns1__DownloadFileById *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DownloadFileById(struct soap*, const char *, int, _ns1__DownloadFileById *const*, const char *);
SOAP_FMAC3 _ns1__DownloadFileById ** SOAP_FMAC4 soap_in_PointerTo_ns1__DownloadFileById(struct soap*, const char*, _ns1__DownloadFileById **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DownloadFileById(struct soap*, _ns1__DownloadFileById *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__DownloadFileById
#define soap_write_PointerTo_ns1__DownloadFileById(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__DownloadFileById(soap, data),0) || soap_put_PointerTo_ns1__DownloadFileById(soap, data, "ns1:DownloadFileById", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__DownloadFileById ** SOAP_FMAC4 soap_get_PointerTo_ns1__DownloadFileById(struct soap*, _ns1__DownloadFileById **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__DownloadFileById
#define soap_read_PointerTo_ns1__DownloadFileById(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__DownloadFileById(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetObjectsVersion
#define SOAP_TYPE_PointerTo_ns1__GetObjectsVersion (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetObjectsVersion(struct soap*, _ns1__GetObjectsVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetObjectsVersion(struct soap*, const char *, int, _ns1__GetObjectsVersion *const*, const char *);
SOAP_FMAC3 _ns1__GetObjectsVersion ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetObjectsVersion(struct soap*, const char*, _ns1__GetObjectsVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetObjectsVersion(struct soap*, _ns1__GetObjectsVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetObjectsVersion
#define soap_write_PointerTo_ns1__GetObjectsVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetObjectsVersion(soap, data),0) || soap_put_PointerTo_ns1__GetObjectsVersion(soap, data, "ns1:GetObjectsVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetObjectsVersion ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetObjectsVersion(struct soap*, _ns1__GetObjectsVersion **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetObjectsVersion
#define soap_read_PointerTo_ns1__GetObjectsVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetObjectsVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__QueryObjects
#define SOAP_TYPE_PointerTo_ns1__QueryObjects (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryObjects(struct soap*, _ns1__QueryObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryObjects(struct soap*, const char *, int, _ns1__QueryObjects *const*, const char *);
SOAP_FMAC3 _ns1__QueryObjects ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryObjects(struct soap*, const char*, _ns1__QueryObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryObjects(struct soap*, _ns1__QueryObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__QueryObjects
#define soap_write_PointerTo_ns1__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__QueryObjects(soap, data),0) || soap_put_PointerTo_ns1__QueryObjects(soap, data, "ns1:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjects ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryObjects(struct soap*, _ns1__QueryObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__QueryObjects
#define soap_read_PointerTo_ns1__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__logoutUser
#define SOAP_TYPE_PointerTo_ns1__logoutUser (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__logoutUser(struct soap*, _ns1__logoutUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__logoutUser(struct soap*, const char *, int, _ns1__logoutUser *const*, const char *);
SOAP_FMAC3 _ns1__logoutUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__logoutUser(struct soap*, const char*, _ns1__logoutUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__logoutUser(struct soap*, _ns1__logoutUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__logoutUser
#define soap_write_PointerTo_ns1__logoutUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__logoutUser(soap, data),0) || soap_put_PointerTo_ns1__logoutUser(soap, data, "ns1:logoutUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__logoutUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__logoutUser(struct soap*, _ns1__logoutUser **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__logoutUser
#define soap_read_PointerTo_ns1__logoutUser(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__logoutUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__loginUser
#define SOAP_TYPE_PointerTo_ns1__loginUser (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__loginUser(struct soap*, _ns1__loginUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__loginUser(struct soap*, const char *, int, _ns1__loginUser *const*, const char *);
SOAP_FMAC3 _ns1__loginUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__loginUser(struct soap*, const char*, _ns1__loginUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__loginUser(struct soap*, _ns1__loginUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__loginUser
#define soap_write_PointerTo_ns1__loginUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__loginUser(soap, data),0) || soap_put_PointerTo_ns1__loginUser(soap, data, "ns1:loginUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__loginUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__loginUser(struct soap*, _ns1__loginUser **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__loginUser
#define soap_read_PointerTo_ns1__loginUser(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__loginUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__ArrayOfInt
#define SOAP_TYPE_PointerTons1__ArrayOfInt (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfInt(struct soap*, ns1__ArrayOfInt *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfInt(struct soap*, const char *, int, ns1__ArrayOfInt *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfInt ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfInt(struct soap*, const char*, ns1__ArrayOfInt **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfInt(struct soap*, ns1__ArrayOfInt *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__ArrayOfInt
#define soap_write_PointerTons1__ArrayOfInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__ArrayOfInt(soap, data),0) || soap_put_PointerTons1__ArrayOfInt(soap, data, "ns1:ArrayOfInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfInt ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfInt(struct soap*, ns1__ArrayOfInt **, const char*, const char*);

#ifndef soap_read_PointerTons1__ArrayOfInt
#define soap_read_PointerTons1__ArrayOfInt(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ArrayOfInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__base64Binary
#define SOAP_TYPE_PointerToxsd__base64Binary (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__base64Binary(struct soap*, const char *, int, xsd__base64Binary *const*, const char *);
SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_in_PointerToxsd__base64Binary(struct soap*, const char*, xsd__base64Binary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__base64Binary
#define soap_write_PointerToxsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__base64Binary(soap, data),0) || soap_put_PointerToxsd__base64Binary(soap, data, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_get_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary **, const char*, const char*);

#ifndef soap_read_PointerToxsd__base64Binary
#define soap_read_PointerToxsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data),0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
